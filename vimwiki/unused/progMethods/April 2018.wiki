
14. 
  b) 
{{{java  
class TextQuoter implements TPI {
    private TPI tpi;
    
    public TextQuoter(TPI tpi) {
        this.tpi = tpi;
    }
    
    @Override
    public void process(String text) {
        tpi.process("'" + text + "'");
    }
}
}}}

  c) 
{{{java 
TextProcessor1 tp1 = new TextProcessor1;
TextQuoter tp2 = new TextQuoter(new TextQuoter(tp1));

tp2.process("Hi");
}}}

  d) Decorator

15. 
  a) 
{{{java 
public class ObservablePuzzleState implements PuzzleState {
    PuzzleState puzzleState;
    PuzzleStateObserver observer;
    
    public ObservablePuzzleState (final PuzzleState puzzleState, final PuzzleStateObserver observer) {
        this.puzzleState = puzzleState;
        this.observer = observer;
    }

    @Override
    int getCell(int index) {
        return puzzleState.getCell(index); 
    }
    
    @Override
    int resetCell(int index) {
        puzzleState.resetCell(index);
        notify(this, index);
    }
    
    @Override
    int incCell(int index) {
        puzzleState.incCell(index);
        notify(this, index);
    }
}
}}}

